{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Dev-Environment one publicsubnet ,two privatesubnet and two availability zones with an NAT instance.",
  "Parameters": {
    
    "vpcCidr": {
		"Description": "VPC CIDR block.",
		"Type": "String",
		"MinLength": "7",
		"MaxLength": "15",
		"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(\\d|[1-2]\\d|3[0-2]))?$",
		"ConstraintDescription" : "can contain only numbers and dot"
    },
    "publicSubnet1Cidr": {
		"Description": "Public subnet 1 CIDR block.",
		"Type": "String",
		"MinLength": "7",
		"MaxLength": "15",
		"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(\\d|[1-2]\\d|3[0-2]))?$",
		"ConstraintDescription" : "can contain only numbers and dot"
    },
    "privateSubnet1Cidr": {
		"Description": "Private subnet 1 CIDR block.",
		"Type": "String",
		"MinLength": "7",
		"MaxLength": "15",
		"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(\\d|[1-2]\\d|3[0-2]))?$",
		"ConstraintDescription" : "can contain only numbers and dot"
    },
    "privateSubnet2Cidr": {
		"Description": "Private subnet 2 CIDR block.",
		"Type": "String",
		"MinLength": "7",
		"MaxLength": "15",
		"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(\\d|[1-2]\\d|3[0-2]))?$",
		"ConstraintDescription" : "can contain only numbers and dot"
    },
    
    "subnet1AZ": {
		"Description": "Subnet 1 availability zone.",
		"Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "subnet2AZ": {
		"Description": "Subnet 2 availability zone.",
		"Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "natInstanceType": {
		"Description": "Amazon EC2 instance type for the NAT instance. This instance will be put on public subnet 1.",
		"Type": "String",
		"Default": "t2.micro",
		"AllowedValues": [
        "t2.micro", "t2.small", "t2.medium", "t2.large",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
        "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge"
		]
      },
	"natKeyName": {
		"Description" : "Name of an existing EC2 KeyPair to enable SSH access to NAT instances.",
		"Type": "AWS::EC2::KeyPair::KeyName",
		"ConstraintDescription" : "Must be the name of an existing EC2 KeyPair."
		}
	},
	"Mappings" : {
		"AWSInstanceType2Arch" : {
			"t2.nano"     : { "Arch" : "HVM64"  },
			"t2.micro"    : { "Arch" : "HVM64"  },
			"t2.small"    : { "Arch" : "HVM64"  },
			"t2.medium"   : { "Arch" : "HVM64"  }
		},

		"AWSNATAMI" : {
			"us-east-1"      : { "AMI" : "ami-6869aa05" }
		},

		"AWSRegionArch2AMI" : {
			"us-east-1"        : { "HVM64" : "ami-6869aa05" }
			}
	},
		
     "Resources" : {
	
		"VPC" : {
			"Type": "AWS::EC2::VPC",
			"Properties": {
			"CidrBlock": {"Ref": "vpcCidr"},
			"InstanceTenancy": "default",
			"EnableDnsSupport": "true",
			"EnableDnsHostnames": "true",
			"Tags": [
				{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "Public" }
			]
		}
    },
		"publicSubnet1" : {
			"Type" : "AWS::EC2::Subnet",
			"DependsOn" : ["VPC"],
			"Properties" : {
			"CidrBlock" : {"Ref": "publicSubnet1Cidr"},
			"AvailabilityZone" : {"Ref" : "subnet1AZ"},
			"VpcId" : {"Ref": "VPC"},
			"Tags" : [
				{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "public" }
			]
		}
    },
		"privateSubnet1" : {
			"Type" : "AWS::EC2::Subnet",
			"DependsOn" : ["VPC"],
			"Properties" : {
			"CidrBlock" : {"Ref": "privateSubnet1Cidr"},
			"AvailabilityZone" : {"Ref" : "subnet1AZ"},
			"VpcId" : {"Ref": "VPC"},
			"Tags" : [
			{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "Private" }
			]
		}
    },
		"privateSubnet2" : {
			"Type" : "AWS::EC2::Subnet",
			"DependsOn" : ["VPC"],
			"Properties" : {
			"CidrBlock" : {"Ref": "privateSubnet2Cidr"},
			"AvailabilityZone" : {"Ref" : "subnet2AZ"},
			"VpcId" : {"Ref": "VPC"},
			"Tags" : [
			{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "Private" }
			]
			}
	},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"DependsOn": ["VPC"],
			"Properties": {
			"Tags": [
				{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "Public" }
			]
		}
    },
		"attachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"DependsOn": ["VPC", "InternetGateway"],
			"Properties": {
			"VpcId": {"Ref": "VPC"},
			"InternetGatewayId": {"Ref": "InternetGateway"}
			}
		},
		"RoutePublic": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": ["VPC", "attachGateway"],
			"Properties": {
			"VpcId": {"Ref": "VPC"},
			"Tags": [
				{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "Public" }
			]
		}
    },
		"RoutePublic1": {
			"Type": "AWS::EC2::Route",
			"DependsOn": ["RoutePublic"],
			"Properties": {
			"DestinationCidrBlock": "0.0.0.0/0",
			"RouteTableId": {"Ref": "RoutePublic"},
			"GatewayId": {"Ref": "InternetGateway"}
			},
			"DependsOn": "attachGateway"
		},
		"subnetRouteTableAssociationPublic1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": ["RoutePublic", "publicSubnet1"],
			"Properties": {
			"RouteTableId": {"Ref": "RoutePublic"},
			"SubnetId": {"Ref": "publicSubnet1"}
			}
		},
		"RoutePrivate": {
			"Type": "AWS::EC2::RouteTable",
			"DependsOn": ["VPC"],
			"Properties": {
			"VpcId": {"Ref": "VPC"},
			"Tags": [
			    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "Private" }
          	  ]
			}
		},
		"RoutePrivate1": {
			"Type": "AWS::EC2::Route",
			"Properties": {
			"DestinationCidrBlock": "0.0.0.0/0",
			"RouteTableId": {"Ref": "RoutePrivate"},
			"InstanceId": {"Ref": "NATEc2Instance"}
			}
		},
		"subnetRouteTableAssociationPrivate1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": ["RoutePublic", "privateSubnet1"],
			"Properties": {
			"RouteTableId": {"Ref": "RoutePrivate"},
			"SubnetId": {"Ref": "privateSubnet1"}
			}
		},
		"subnetRouteTableAssociationPrivate2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"DependsOn": ["RoutePublic", "privateSubnet2"],
			"Properties": {
			"RouteTableId": {"Ref": "RoutePrivate"},
			"SubnetId": {"Ref": "privateSubnet2"}
			}
		},
		"NATEc2Instance": {
			"Type": "AWS::EC2::Instance",
			"DependsOn": ["VPC", "attachGateway", "publicSubnet1", "sgNAT"],
			"Properties": {
			"DisableApiTermination": "false",
			"InstanceInitiatedShutdownBehavior": "stop",
			"InstanceType": {"Ref": "natInstanceType"},
			"ImageId": {"Fn::FindInMap": ["AWSNATAMI", {"Ref": "AWS::Region"}, "AMI"]},
			"KeyName": {"Ref": "natKeyName"},
			"Monitoring": "false",
			"SourceDestCheck": "false",
			"Tags": [
				{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "public" }
			],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {"Ref": "publicSubnet1"},
            "GroupSet": [
              {"Ref": "sgNAT"}
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
		"sgNAT": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": ["VPC", "attachGateway"],
			"Properties": {
			"GroupDescription": "Security group for NAT instances",
			"VpcId": {"Ref": "VPC"},
			"SecurityGroupIngress": [
			{
                    "IpProtocol": "tcp",
                    "FromPort": "1",
                    "ToPort": "65535",
                    "CidrIp": { "Ref": "vpcCidr" }
                }],
        "Tags": [
				{"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
				{"Key" : "Network", "Value" : "public" }
				]
			}
		}
	}
}